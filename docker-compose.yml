version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: atbench-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: recruiting_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - atbench-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d recruiting_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      # Pass environment variables during build
      args:
        - OPENAI_API_KEY=${OPENAI_API_KEY}
        - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password123@atbench-postgres:5433/recruiting_db}
        - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-secret-key-here}
        - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
    container_name: atbench-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password123@atbench-postgres:5433/recruiting_db}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-secret-key-here}
      # Add your OAuth credentials here
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_ID=${GITHUB_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - LINKEDIN_CLIENT_ID=${LINKEDIN_CLIENT_ID}
      - LINKEDIN_CLIENT_SECRET=${LINKEDIN_CLIENT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      # Mount uploads directory for file persistence
      - ./public/uploads:/app/public/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - atbench-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (Optional - for session storage or caching)
  redis:
    image: redis:7-alpine
    container_name: atbench-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - atbench-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:

networks:
  atbench-network:
    driver: bridge